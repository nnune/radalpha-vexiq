{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"boolean\" id=\"t=QBOP0vmlw1b^NQ0#(]\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">runShooterForward</variable><variable type=\"boolean\" id=\"Kwbtmgy.i+HSG@qDhu,Q\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">runShooterReverse</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" deletable=\"false\" x=\"-1370\" y=\"-2010\"></block><block type=\"iq_events_when_started\" id=\"U6na-aH:a8?Z;D-ImZzS\" x=\"-450\" y=\"-1950\"><next><block type=\"iq_drivetrain_set_drive_velocity\" id=\"%(Lj^*xLySW+QrP?@|S:\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"t$=ry+_2dbx_(4C.=0r)\"><field name=\"NUM\">100</field></shadow></value></block></next></block><block type=\"iq_events_when_controller_button\" id=\"hjDQ3oMj-5fdzqpj]O3d\" x=\"-750\" y=\"-1650\"><field name=\"BUTTON\">ButtonEUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_variables_set_boolean_variable\" id=\"BUM}rpRM;`*./WuVedxr\"><field name=\"VARIABLE\" id=\"t=QBOP0vmlw1b^NQ0#(]\" variabletype=\"boolean\">runShooterForward</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"}Mhk+}SuHvXb]@9HUUbv\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"!nY.-7Cu;q%HLoTpch)a\"><field name=\"VARIABLE\" id=\"Kwbtmgy.i+HSG@qDhu,Q\" variabletype=\"boolean\">runShooterReverse</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"ZBJB$605aM2*N+0jPz=I\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_control_while\" id=\"{Kct^L6M8zflQT;hXayF\"><value name=\"CONDITION\"><block type=\"iq_variables_boolean_variable\" id=\"^{v?K0)mQAaE=KYIU$xx\"><field name=\"VARIABLE\" id=\"t=QBOP0vmlw1b^NQ0#(]\" variabletype=\"boolean\">runShooterForward</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_set_motor_velocity\" id=\"I*Xc5Jud8`x^p,c:Q7+2\"><field name=\"MOTOR\">Shooter</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"dE/cm5ZTN-=xSxg~rd5:\"><field name=\"NUM\">300</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"k(..8~S:tK+-8K8EdQ9I\"><field name=\"MOTOR\">Shooter</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"I#{36kx!$[`CU0c42qdv\"><field name=\"NUM\">110</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"eI:fC@^@/5}=3n4`F+By\"><field name=\"MOTOR\">Shooter</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_looks_print_new\" id=\"Z6t5aVzI.sR8}p))JOn(\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\",pSx.p9g^ub~F%J;kbDy\"><field name=\"TEXT\">Gass</field></shadow></value></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"/qU|wLBk8?OzFhfln[+=\" x=\"-290\" y=\"-1650\"><field name=\"BUTTON\">ButtonEDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_variables_set_boolean_variable\" id=\"A-VbFWetpQ-rj7?4K.q0\"><field name=\"VARIABLE\" id=\"Kwbtmgy.i+HSG@qDhu,Q\" variabletype=\"boolean\">runShooterReverse</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"J}v2Kve13@6=:sMtiCQc\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"uO!,]|Xb*OIkMC[E1fPh\"><field name=\"VARIABLE\" id=\"t=QBOP0vmlw1b^NQ0#(]\" variabletype=\"boolean\">runShooterForward</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"V_CepEo+m*gz7xoRq8Qw\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_control_while\" id=\"@5?ZUD6l,j.LvO21,wyD\"><value name=\"CONDITION\"><block type=\"iq_variables_boolean_variable\" id=\"{TC{A9_V1;go/vr2ZIXn\"><field name=\"VARIABLE\" id=\"Kwbtmgy.i+HSG@qDhu,Q\" variabletype=\"boolean\">runShooterReverse</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_set_motor_velocity\" id=\"k{28{Cz4ea~Q+bDvBj4g\"><field name=\"MOTOR\">Shooter</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\")52BujEjz+J^^y(q9cF9\"><field name=\"NUM\">60</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"_L!`98u7AiWW[%3WF=+}\"><field name=\"MOTOR\">Shooter</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"Eluo2@7#qwzJ_Dd5H+4u\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"?.x5qFeC:}gKo.cq^zu/\"><field name=\"MOTOR\">Shooter</field><field name=\"DIRECTION\">rev</field></block></next></block></next></block></statement></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"y[XRiBuXY?[bmN9*VO;C\" x=\"-770\" y=\"-1170\"><field name=\"BUTTON\">ButtonFDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_variables_set_boolean_variable\" id=\"9a0?VrkVYrC.F!4zc+Lb\"><field name=\"VARIABLE\" id=\"t=QBOP0vmlw1b^NQ0#(]\" variabletype=\"boolean\">runShooterForward</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"z(HOXUeRa=#L,`UIiBr|\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"pduY:LnXJahi=/;8fcKt\"><field name=\"VARIABLE\" id=\"Kwbtmgy.i+HSG@qDhu,Q\" variabletype=\"boolean\">runShooterReverse</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"+5{^lpdPv%3P3b^Q,4)$\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"?%h)(0j#}qqcRWAb)N9}\"><field name=\"MOTOR\">Shooter</field></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"FZYR4/ESY4YpaEAZFimv\" x=\"-270\" y=\"-1170\"><field name=\"BUTTON\">ButtonFUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_variables_set_boolean_variable\" id=\",3-DvA//;-v0U-+4CvGo\"><field name=\"VARIABLE\" id=\"t=QBOP0vmlw1b^NQ0#(]\" variabletype=\"boolean\">runShooterForward</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"B|@$sOvT;Qh-9+vaa`=]\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"SRF%]Qwu#*m$`-K_FUMK\"><field name=\"VARIABLE\" id=\"Kwbtmgy.i+HSG@qDhu,Q\" variabletype=\"boolean\">runShooterReverse</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"oP=]l3=$g-qahMZCF+/l\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"Vm$p/@Y[nsXAo)(YsX2-\"><field name=\"MOTOR\">Shooter</field></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"$0p$u9N*m[UtHX,aKOlQ\" x=\"-790\" y=\"-930\"><field name=\"BUTTON\">ButtonLUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_set_motor_velocity\" id=\",In#:uMq*`IaG_TM:.=B\"><field name=\"MOTOR\">Bucket</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"z81wWw]W{NNm)t%,Y+Z|\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"ll[lQvTJTz~Gxr.!t^Gu\"><field name=\"MOTOR\">Bucket</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"LiVZ5K?Y=Q$0VP+hPy1p\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"N@#46ZElh,1q,d$7.~^,\"><field name=\"MOTOR\">Bucket</field><field name=\"DIRECTION\">rev</field></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"zwX$R7j_fU5s48vwM}zd\" x=\"-270\" y=\"-930\"><field name=\"BUTTON\">ButtonLDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_set_motor_velocity\" id=\"AW~-gL0.1r;(Nuf:+dRA\"><field name=\"MOTOR\">Bucket</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"BgnGl?f1TP:fo8Ri.aZ0\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"NtWbd],XVoA$.*+?+zRe\"><field name=\"MOTOR\">Bucket</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"7s?^aXyFtDhFk{@Yf2`!\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"M:q0!_vkk|Os@Lj[(wI?\"><field name=\"MOTOR\">Bucket</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"|m3-jnvwL@y@^.qVSBSU\" x=\"-810\" y=\"-650\"><field name=\"BUTTON\">ButtonLDown</field><field name=\"EVENTTYPE\">released</field><next><block type=\"iq_motion_stop_motor\" id=\"[!AkcFuep)USpb6*^_Z*\"><field name=\"MOTOR\">Bucket</field></block></next></block><block type=\"iq_events_when_controller_button\" id=\"?ps4GX5S{8Syw^pgU@W5\" x=\"-270\" y=\"-650\"><field name=\"BUTTON\">ButtonLUp</field><field name=\"EVENTTYPE\">released</field><next><block type=\"iq_motion_stop_motor\" id=\"VX[7E$$+3hwxE/HCNUn$\"><field name=\"MOTOR\">Bucket</field></block></next></block><block type=\"iq_events_when_controller_button\" id=\"MUtWV_f}HAsTd6+c.!~L\" x=\"-810\" y=\"-510\"><field name=\"BUTTON\">ButtonRUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_set_motor_velocity\" id=\"30N=F!~WK7SQJ.QPw.{U\"><field name=\"MOTOR\">BlueBoy</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"%]8Z#vLXp=]M)KvVD7U=\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"78C|-:Pr^Q?TBW#3?dCF\"><field name=\"MOTOR\">BlueBoy</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"=SEgtfY=-D[$/QAl(9;r\" x=\"-290\" y=\"-510\"><field name=\"BUTTON\">ButtonRDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_set_motor_velocity\" id=\"6,1a+LYyA^5-9CXV~f}f\"><field name=\"MOTOR\">BlueBoy</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"[+-^|]vrO4L?Pi$5YK[~\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"MA[m6sIKON(0Ni5-l2TW\"><field name=\"MOTOR\">BlueBoy</field><field name=\"DIRECTION\">rev</field></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"9@=|?XbiO:sKUKC1gNw[\" x=\"-790\" y=\"-330\"><field name=\"BUTTON\">ButtonRUp</field><field name=\"EVENTTYPE\">released</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"(eC|h!sCxI}^~hcDOt.`\"><field name=\"MOTOR\">BlueBoy</field><field name=\"MODE\">hold</field><next><block type=\"iq_motion_stop_motor\" id=\"+:/j7X8+p60bCrF?zGCt\"><field name=\"MOTOR\">BlueBoy</field></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"]^y}E$l+Q-`+D*~rxC.C\" x=\"-270\" y=\"-310\"><field name=\"BUTTON\">ButtonRDown</field><field name=\"EVENTTYPE\">released</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"_oA3fHNc[i};VoOj`2b0\"><field name=\"MOTOR\">BlueBoy</field><field name=\"MODE\">hold</field><next><block type=\"iq_motion_stop_motor\" id=\"@|;f^#0@2Q#_4%?G*TUz\"><field name=\"MOTOR\">BlueBoy</field></block></next></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"Bucket","leftDir":"false","right":"BlueBoy","rightDir":"false","e":"Shooter","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"tank"},"triportSourcePort":22},{"port":[1,6,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:2","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[4],"name":"BlueBoy","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[10],"name":"Bucket","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[11],"name":"Shooter","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":7,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.4","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\ncontroller Controller = controller();\nmotor LeftDriveSmart = motor(PORT1, 0.5, false);\nmotor RightDriveSmart = motor(PORT6, 0.5, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);\nmotor BlueBoy = motor(PORT4, false);\nmotor Bucket = motor(PORT10, false);\nmotor Shooter = motor(PORT11, false);\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool ControllerLeftShoulderControlMotorsStopped = true;\nbool ControllerRightShoulderControlMotorsStopped = true;\nbool eButtonsControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA\n      // right = AxisD\n      int drivetrainLeftSideSpeed = Controller.AxisA.position();\n      int drivetrainRightSideSpeed = Controller.AxisD.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonLUp/ButtonLDown status to control Bucket\n      if (Controller.ButtonLUp.pressing()) {\n        Bucket.spin(forward);\n        ControllerLeftShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonLDown.pressing()) {\n        Bucket.spin(reverse);\n        ControllerLeftShoulderControlMotorsStopped = false;\n      } else if (!ControllerLeftShoulderControlMotorsStopped) {\n        Bucket.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerLeftShoulderControlMotorsStopped = true;\n      }\n      // check the ButtonRUp/ButtonRDown status to control BlueBoy\n      if (Controller.ButtonRUp.pressing()) {\n        BlueBoy.spin(forward);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonRDown.pressing()) {\n        BlueBoy.spin(reverse);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (!ControllerRightShoulderControlMotorsStopped) {\n        BlueBoy.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerRightShoulderControlMotorsStopped = true;\n      }\n      // check the ButtonEUp/ButtonEDown status to control Shooter\n      if (Controller.ButtonEUp.pressing()) {\n        Shooter.spin(forward);\n        eButtonsControlMotorsStopped = false;\n      } else if (Controller.ButtonEDown.pressing()) {\n        Shooter.spin(reverse);\n        eButtonsControlMotorsStopped = false;\n      } else if (!eButtonsControlMotorsStopped) {\n        Shooter.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        eButtonsControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\nbool runShooterForward, runShooterReverse;\n\n// \"when started\" hat block\nint whenStarted1() {\n  return 0;\n}\n\n// \"when started\" hat block\nint whenStarted2() {\n  Drivetrain.setDriveVelocity(100.0, percent);\n  return 0;\n}\n\n// \"when Controller ButtonEUp pressed\" hat block\nvoid onevent_ControllerButtonEUp_pressed_0() {\n  runShooterForward = true;\n  runShooterReverse = false;\n  while (runShooterForward) {\n    Shooter.setVelocity(300.0, rpm);\n    Shooter.setMaxTorque(110.0, percent);\n    Shooter.spin(forward);\n    Brain.Screen.print(\"Gass\");\n  wait(20, msec);\n  }\n}\n\n// \"when Controller ButtonEDown pressed\" hat block\nvoid onevent_ControllerButtonEDown_pressed_0() {\n  runShooterReverse = true;\n  runShooterForward = false;\n  while (runShooterReverse) {\n    Shooter.setVelocity(60.0, percent);\n    Shooter.setMaxTorque(100.0, percent);\n    Shooter.spin(reverse);\n  wait(20, msec);\n  }\n}\n\n// \"when Controller ButtonFDown pressed\" hat block\nvoid onevent_ControllerButtonFDown_pressed_0() {\n  runShooterForward = false;\n  runShooterReverse = false;\n  Shooter.stop();\n}\n\n// \"when Controller ButtonFUp pressed\" hat block\nvoid onevent_ControllerButtonFUp_pressed_0() {\n  runShooterForward = false;\n  runShooterReverse = false;\n  Shooter.stop();\n}\n\n// \"when Controller ButtonLUp pressed\" hat block\nvoid onevent_ControllerButtonLUp_pressed_0() {\n  Bucket.setVelocity(100.0, rpm);\n  Bucket.setMaxTorque(100.0, percent);\n  Bucket.spin(reverse);\n}\n\n// \"when Controller ButtonLDown pressed\" hat block\nvoid onevent_ControllerButtonLDown_pressed_0() {\n  Bucket.setVelocity(100.0, rpm);\n  Bucket.setMaxTorque(100.0, percent);\n  Bucket.spin(forward);\n}\n\n// \"when Controller ButtonLDown released\" hat block\nvoid onevent_ControllerButtonLDown_released_0() {\n  Bucket.stop();\n}\n\n// \"when Controller ButtonLUp released\" hat block\nvoid onevent_ControllerButtonLUp_released_0() {\n  Bucket.stop();\n}\n\n// \"when Controller ButtonRUp pressed\" hat block\nvoid onevent_ControllerButtonRUp_pressed_0() {\n  BlueBoy.setVelocity(100.0, percent);\n  BlueBoy.spin(forward);\n}\n\n// \"when Controller ButtonRDown pressed\" hat block\nvoid onevent_ControllerButtonRDown_pressed_0() {\n  BlueBoy.setVelocity(100.0, percent);\n  BlueBoy.spin(reverse);\n}\n\n// \"when Controller ButtonRUp released\" hat block\nvoid onevent_ControllerButtonRUp_released_0() {\n  BlueBoy.setStopping(hold);\n  BlueBoy.stop();\n}\n\n// \"when Controller ButtonRDown released\" hat block\nvoid onevent_ControllerButtonRDown_released_0() {\n  BlueBoy.setStopping(hold);\n  BlueBoy.stop();\n}\n\n\nint main() {\n  // register event handlers\n  Controller.ButtonEUp.pressed(onevent_ControllerButtonEUp_pressed_0);\n  Controller.ButtonEDown.pressed(onevent_ControllerButtonEDown_pressed_0);\n  Controller.ButtonFDown.pressed(onevent_ControllerButtonFDown_pressed_0);\n  Controller.ButtonFUp.pressed(onevent_ControllerButtonFUp_pressed_0);\n  Controller.ButtonLUp.pressed(onevent_ControllerButtonLUp_pressed_0);\n  Controller.ButtonLDown.pressed(onevent_ControllerButtonLDown_pressed_0);\n  Controller.ButtonLDown.released(onevent_ControllerButtonLDown_released_0);\n  Controller.ButtonLUp.released(onevent_ControllerButtonLUp_released_0);\n  Controller.ButtonRUp.pressed(onevent_ControllerButtonRUp_pressed_0);\n  Controller.ButtonRDown.pressed(onevent_ControllerButtonRDown_pressed_0);\n  Controller.ButtonRUp.released(onevent_ControllerButtonRUp_released_0);\n  Controller.ButtonRDown.released(onevent_ControllerButtonRDown_released_0);\n\n  wait(15, msec);\n  vex::task ws1(whenStarted2);\n  whenStarted1();\n}","target":"Physical"}